CREATE PROCEDURE [dbo].[spBundleProductRelation]
    @Id INT = NULL,
    @ProductId INT = NULL,
    @BundleId INT = NULL,
    @StatementType VARCHAR(100) = '',
    @newId INT = NULL OUTPUT
AS
BEGIN
    SET NOCOUNT ON;


    DECLARE @defaultProductId INT = ISNULL(@ProductId, 0);
    DECLARE @defaultBundleId INT = ISNULL(@BundleId, 0);

    IF @StatementType = 'Create'
    BEGIN
     BEGIN TRANSACTION;
        INSERT INTO BundleProductRelation (ProductId, BundleId)
        VALUES (@ProductId, @BundleId);
        SET @newId = SCOPE_IDENTITY();
        COMMIT TRANSACTION; -- Commit the transaction
        RETURN @newId;
    END
    ELSE IF @StatementType = 'GetById'
    BEGIN
        SELECT Id, ProductId, BundleId FROM BundleProductRelation WHERE Id = @Id;
    END
    ELSE IF @StatementType = 'BundleProductRelationExists'
    BEGIN
        SELECT COUNT(1) AS ent FROM BundleProductRelation
        WHERE BundleId = @defaultBundleId AND ProductId = @defaultProductId;
    END
    ELSE IF @StatementType = 'GetAllByProductId'
    BEGIN
        SELECT Id, BundleId FROM BundleProductRelation
        WHERE ProductId = @ProductId;
    END
    ELSE IF @StatementType = 'GetAllByBundleId'
    BEGIN
        SELECT Id, ProductId FROM BundleProductRelation
        WHERE BundleId = @BundleId;
    END
    ELSE IF @StatementType = 'GetAll'
    BEGIN
        SELECT Id, ProductId, BundleId FROM BundleProductRelation;
    END
    ELSE IF @StatementType = 'GetAllFull'
    BEGIN
        SELECT
            RELATION.Id AS RelationId,
            PRODUCT.ProductId,
            PRODUCT.Id,
            BUNDLE.Id AS BundleId
        FROM BundleProductRelation AS RELATION
        LEFT JOIN Products AS PRODUCT ON RELATION.ProductId = PRODUCT.Id
        LEFT JOIN Bundle AS BUNDLE ON RELATION.BundleId = BUNDLE.Id;
    END
    ELSE IF @StatementType = 'Update'
    BEGIN
        BEGIN TRANSACTION;
        UPDATE BundleProductRelation
        SET ProductId = @ProductId, BundleId = @BundleId
        WHERE Id = @Id;
        COMMIT TRANSACTION;
    END
    ELSE IF @StatementType = 'Delete'
    BEGIN
        BEGIN TRANSACTION;
        DELETE FROM BundleProductRelation WHERE Id = @Id;
        COMMIT TRANSACTION;
    END
    ELSE IF @StatementType = 'DeleteByProduct'
    BEGIN
     BEGIN TRANSACTION;
        DELETE FROM BundleProductRelation WHERE ProductId = @defaultProductId;
     COMMIT TRANSACTION;
    END
    ELSE IF @StatementType = 'DeleteByBundle'
    BEGIN
     BEGIN TRANSACTION;
        DELETE FROM BundleProductRelation WHERE BundleId = @defaultBundleId;
     COMMIT TRANSACTION;
    END
    -- Removed 'Truncate' operation for safety
    ELSE
    BEGIN
        PRINT CONCAT('Unsupported StatementType: ', @StatementType);
        RAISERROR('Unsupported StatementType', 16, 1);
        ROLLBACK TRANSACTION; -- Rollback the transaction
        RETURN;
    END
END
