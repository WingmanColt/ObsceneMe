export enum Trademarks {
 NONE = 0,
 MGA = 1,
 WO = 2,
 BSG = 3,
 TYC = 4,
 SAHLER = 5,
 LUK = 6,
 GKL = 7,
 MOTUL = 8,
 MOBIL = 9,
 FEBI = 10,
 HELLA = 11,
 BOSCH = 12,
 FAMALLI = 13,
 VOTTO = 14,
 TEKNOROT = 15,
 REGUS = 16,
 MAPA = 17,
 FAE = 18,
 ELF = 19,
 BARDAHL = 20,
 CORTECO = 21,
 DELPHI = 22,
 ATE = 23,
 OPTIMAL = 24,
 FROW = 25,
 FUCHS = 26,
 VALEO = 27,
 SACHS = 28,
 NGK = 29,
 KALE = 30,
 TOTAL = 31,
 BANCO = 32,
 VEKA = 33,
 FORU = 34,
 BMW = 35,
 FAG = 36,
 JAPANPARTS = 37,
 LEMFORDER = 38,
 MEYLE = 39,
 MONROE = 40,
 MOOG = 41,
 TRW = 42,
 BOGA = 43,
 MOLY = 44
}


export const Trademarks_LabelMapping: Record<Trademarks, string> = {
  [Trademarks.NONE]: 'None',
  [Trademarks.MGA]: 'MGA',
  [Trademarks.WO]: 'WO',
  [Trademarks.BSG]: 'BSG',
  [Trademarks.TYC]: 'TYC',
  [Trademarks.SAHLER]: 'SAHLER',
  [Trademarks.LUK]: 'LUK',
  [Trademarks.GKL]: 'GKL',
  [Trademarks.MOTUL]: 'MOTUL',
  [Trademarks.MOBIL]: 'BTAP',
  [Trademarks.FEBI]: 'FEBI',
  [Trademarks.HELLA]: 'HELLA',
  [Trademarks.BOSCH]: 'BOSCH',
  [Trademarks.FAMALLI]: 'FAMALLI',
  [Trademarks.VOTTO]: 'VOTTO',
  [Trademarks.TEKNOROT]: 'TEKNOROT',
  [Trademarks.REGUS]: 'REGUS',
  [Trademarks.MAPA]: 'MAPA',
  [Trademarks.FAE]: 'FAE',
  [Trademarks.ELF]: 'ELF',
  [Trademarks.BARDAHL]: 'BARDAHL',
  [Trademarks.CORTECO]: 'CORTECO',
  [Trademarks.DELPHI]: 'DELPHI',
  [Trademarks.ATE]: 'ATE',
  [Trademarks.OPTIMAL]: 'OPTIMAL',
  [Trademarks.FROW]: 'FROW',
  [Trademarks.FUCHS]: 'FUCHS',
  [Trademarks.VALEO]: 'VALEO',
  [Trademarks.SACHS]: 'SACHS',
  [Trademarks.NGK]: 'NGK',
  [Trademarks.KALE]: 'KALE',
  [Trademarks.TOTAL]: 'TOTAL',
  [Trademarks.BANCO]: 'BANCO',
  [Trademarks.VEKA]: 'VEKA',
  [Trademarks.FORU]: 'FORU',
  [Trademarks.BMW]: 'BMW',
  [Trademarks.FAG]: 'FAG',
  [Trademarks.JAPANPARTS]: 'JAPANPARTS',
  [Trademarks.LEMFORDER]: 'LEMFORDER',
  [Trademarks.MEYLE]: 'MEYLE',
  [Trademarks.MONROE]: 'MONROE',
  [Trademarks.MOOG]: 'MOOG',
  [Trademarks.TRW]: 'TRW',
  [Trademarks.BOGA]: 'BOGA',
  [Trademarks.MOLY]: 'MOLY',
};

export const TrademarkArray = Object.values(Trademarks)
  .filter((value) => typeof value === "number")  // Filter only numeric values
  .map((id) => ({
    id: id as number,  // Use numeric value as id
    label: String(Trademarks[id as keyof typeof Trademarks]),  // Get the label from the enum key
    isSelected: false
  }))
  .slice(1);  // Skip the first element
